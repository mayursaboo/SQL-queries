1. latested summed up premium
select sum(pr.premium_amount_inr_without_tax) over(partition by pr.policy_no,coalesce (pr.certificate_no,'00000000'),pr.pol_incept_date,pr.pol_exp_date) premiumamount
from registers.premium_register

2. get year on year premium
select sum(pr.premium_amount_inr_without_tax) over(partition by pr.policy_no,coalesce (pr.certificate_no,'00000000'),pr.pol_incept_date,pr.pol_exp_date, source_system_name) premiumamount 
from (
select *, row_number() over(partition by policy_no, coalesce(certificate_no, '0') order by timestamp desc) rn from from registers.premium_register pr
 )as a where record_type_desc !='CANCELLATION' and rn=1

3. get latest policy details and remove cancellation
select * from (
select *, row_number() over(partition by policy_no, coalesce(certificate_no, '0') order by timestamp desc) rn from from registers.premium_register pr
 )as a where record_type_desc !='CANCELLATION' and rn=1

4. get year on year policy details and remove cancellation

select * from (
select *, row_number() over(partition by policy_no, coalesce(certificate_no, '0'), pol_incept_date, pol_exp_date order by timestamp desc) rn from from registers.premium_register pr
 )as a where record_type_desc !='CANCELLATION' and rn=1

5. Join pr with mastercraft retail
select * from registers.premium_register pr
left join (select mmp.dc_unified_id, mbdp.source_customer_id from public.mastercraft_bulk_detail_prod mbdp join 
public.mastercraft_master_prod mmp on mbdp.dc_unified_id = mmp.dc_unified_id where mmp.dc_active_flag=1) a 
on pr.customer_id = a.source_customer_id

6. join sad with mastercraft corp
select * from datamarts.sales_all_details sad
left join (select mmp.dc_unified_id, mbdp.source_customer_id from public.mc_tbl_bulk_detail_prod_corp mbdp join 
public.mc_tbl_master_prod_corp mmp on mbdp.dc_unified_id = mmp.dc_unified_id where mmp.dc_active_flag=1) a 
on sad.ins_name_client_no= mbdp.source_customer_id

7. separation of primary and seconary conatct from contactibility against gid
select *, mobile as mobile_secondary form (
select distinct dc_unified_id, case when  communication_type!='Invalid' and communication_type in ('phone','Phone') and value is not null 
then value else 0 end mobile, 
row_number() over(partition by dc_unified_id order by value) rn
from customermart.contactability c where communication_type in ('phone','Phone')) as a group by dc_unified_id) as b where rn=2
